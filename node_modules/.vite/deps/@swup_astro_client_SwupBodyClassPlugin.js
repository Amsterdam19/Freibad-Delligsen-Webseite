import {
  e
} from "./chunk-AMQVUKHH.js";
import "./chunk-UXIASGQL.js";

// node_modules/@swup/body-class-plugin/dist/index.modern.js
function t() {
  return t = Object.assign ? Object.assign.bind() : function(s) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var e3 = arguments[t2];
      for (var i in e3)
        Object.prototype.hasOwnProperty.call(e3, i) && (s[i] = e3[i]);
    }
    return s;
  }, t.apply(this, arguments);
}
var e2 = class extends e {
  constructor(s = {}) {
    super(), this.name = "SwupBodyClassPlugin", this.requires = { swup: ">=4" }, this.defaults = { prefix: "" }, this.options = void 0, this.updateBodyClass = (s2, { page: { html: t2 } }) => {
      this.updateClassNames(document.body, this.getBodyElement(t2));
    }, this.options = t({}, this.defaults, s);
  }
  mount() {
    this.on("content:replace", this.updateBodyClass);
  }
  getBodyElement(s) {
    return new DOMParser().parseFromString(s, "text/html").querySelector("body");
  }
  updateClassNames(s, t2) {
    const e3 = [...s.classList].filter((s2) => this.isValidClassName(s2)), i = [...t2.classList].filter((s2) => this.isValidClassName(s2));
    s.classList.remove(...e3), s.classList.add(...i);
  }
  isValidClassName(s) {
    return s && s.startsWith(this.options.prefix);
  }
};
export {
  e2 as default
};
//# sourceMappingURL=@swup_astro_client_SwupBodyClassPlugin.js.map
