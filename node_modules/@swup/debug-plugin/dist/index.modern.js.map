{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import Plugin from '@swup/plugin';\n\nexport default class SwupDebugPlugin extends Plugin {\n\tname = 'SwupDebugPlugin';\n\n\trequires = { swup: '>=4' };\n\n\tdefaults = {\n\t\tglobalInstance: false\n\t};\n\n\tconstructor(options = {}) {\n\t\tsuper();\n\t\tthis.options = { ...this.defaults, ...options };\n\t}\n\n\tmount() {\n\t\tconst swup = this.swup;\n\n\t\t// set non-empty log method of swup\n\t\tthis.originalSwupLog = swup.log;\n\t\tswup.log = this.log;\n\n\t\t// set swup instance as a global variable swup\n\t\tif (this.options.globalInstance) {\n\t\t\twindow.swup = swup;\n\t\t}\n\n\t\t// check if title tag is present\n\t\tif (!document.getElementsByTagName('title').length) {\n\t\t\tthis.warn(`This page doesn't have a title tag. It is required on every page.`)\n\t\t}\n\n\t\t// make hook calls appear in console\n\t\tthis.originalSwupHookCall = swup.hooks.call.bind(swup.hooks);\n\t\tthis.originalSwupHookCallSync = swup.hooks.callSync.bind(swup.hooks);\n\t\tswup.hooks.call = this.callHook.bind(this);\n\t\tswup.hooks.callSync = this.callHookSync.bind(this);\n\t}\n\n\tunmount() {\n\t\tsuper.unmount();\n\n\t\tthis.swup.log = this.originalSwupLog;\n\t\tthis.swup.hooks.call = this.originalSwupHookCall;\n\t\tthis.swup.hooks.callSync = this.originalSwupHookCallSync;\n\t\tif (this.options.globalInstance) {\n\t\t\twindow.swup = null;\n\t\t}\n\t}\n\n\tlogHook(hook, data) {\n\t\tconsole.groupCollapsed(\n\t\t\t'%cswup:' + '%c' + hook,\n\t\t\t'color: #343434',\n\t\t\t'color: #009ACD'\n\t\t);\n\t\tconsole.log(data);\n\t\tconsole.groupEnd();\n\t}\n\n\tcallHook(hook, data, ...args) {\n\t\tthis.logHook(hook, data);\n\t\treturn this.originalSwupHookCall(hook, data, ...args);\n\t}\n\n\tcallHookSync(hook, data, ...args) {\n\t\tthis.logHook(hook, data);\n\t\treturn this.originalSwupHookCallSync(hook, data, ...args);\n\t}\n\n\tlog(str, object) {\n\t\tif (object) {\n\t\t\tconsole.groupCollapsed(str);\n\t\t\tfor (let key in object) {\n\t\t\t\tconsole.log(object[key]);\n\t\t\t}\n\t\t\tconsole.groupEnd();\n\t\t} else {\n\t\t\tconsole.log(str + '%c', 'color: #009ACD');\n\t\t}\n\t}\n\n\twarn(str) {\n\t\tconsole.warn(`[swup debug plugin] ${str}`);\n\t}\n\n\terror(str) {\n\t\tconsole.error(`[swup debug plugin] ${str}`);\n\t}\n}\n"],"names":["SwupDebugPlugin","Plugin","constructor","options","super","this","name","requires","swup","defaults","globalInstance","_extends","mount","originalSwupLog","log","window","document","getElementsByTagName","length","warn","originalSwupHookCall","hooks","call","bind","originalSwupHookCallSync","callSync","callHook","callHookSync","unmount","logHook","hook","data","console","groupCollapsed","groupEnd","args","str","object","key","error"],"mappings":"gQAEe,MAAMA,UAAwBC,EAS5CC,YAAYC,EAAU,CAAA,GACrBC,QAAQC,KATTC,KAAO,kBAEPC,KAAAA,SAAW,CAAEC,KAAM,OAAOH,KAE1BI,SAAW,CACVC,gBAAgB,GAKhBL,KAAKF,QAAOQ,EAAA,CAAA,EAAQN,KAAKI,SAAaN,EACvC,CAEAS,QACC,MAAMJ,EAAOH,KAAKG,KAGlBH,KAAKQ,gBAAkBL,EAAKM,IAC5BN,EAAKM,IAAMT,KAAKS,IAGZT,KAAKF,QAAQO,iBAChBK,OAAOP,KAAOA,GAIVQ,SAASC,qBAAqB,SAASC,QAC3Cb,KAAKc,KAAM,qEAIZd,KAAKe,qBAAuBZ,EAAKa,MAAMC,KAAKC,KAAKf,EAAKa,OACtDhB,KAAKmB,yBAA2BhB,EAAKa,MAAMI,SAASF,KAAKf,EAAKa,OAC9Db,EAAKa,MAAMC,KAAOjB,KAAKqB,SAASH,KAAKlB,MACrCG,EAAKa,MAAMI,SAAWpB,KAAKsB,aAAaJ,KAAKlB,KAC9C,CAEAuB,UACCxB,MAAMwB,UAENvB,KAAKG,KAAKM,IAAMT,KAAKQ,gBACrBR,KAAKG,KAAKa,MAAMC,KAAOjB,KAAKe,qBAC5Bf,KAAKG,KAAKa,MAAMI,SAAWpB,KAAKmB,yBAC5BnB,KAAKF,QAAQO,iBAChBK,OAAOP,KAAO,KAEhB,CAEAqB,QAAQC,EAAMC,GACbC,QAAQC,eACP,YAAmBH,EACnB,iBACA,kBAEDE,QAAQlB,IAAIiB,GACZC,QAAQE,UACT,CAEAR,SAASI,EAAMC,KAASI,GAEvB,OADA9B,KAAKwB,QAAQC,EAAMC,GACZ1B,KAAKe,qBAAqBU,EAAMC,KAASI,EACjD,CAEAR,aAAaG,EAAMC,KAASI,GAE3B,OADA9B,KAAKwB,QAAQC,EAAMC,GACZ1B,KAAKmB,yBAAyBM,EAAMC,KAASI,EACrD,CAEArB,IAAIsB,EAAKC,GACR,GAAIA,EAAQ,CACXL,QAAQC,eAAeG,GACvB,IAAK,IAAIE,KAAOD,EACfL,QAAQlB,IAAIuB,EAAOC,IAEpBN,QAAQE,UACT,MACCF,QAAQlB,IAAIsB,EAAM,KAAM,iBAE1B,CAEAjB,KAAKiB,GACJJ,QAAQb,KAAM,uBAAsBiB,IACrC,CAEAG,MAAMH,GACLJ,QAAQO,MAAO,uBAAsBH,IACtC"}