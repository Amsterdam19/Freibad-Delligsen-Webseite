{"version":3,"file":"index.cjs","sources":["../src/index.js"],"sourcesContent":["import Plugin from '@swup/plugin';\n\nexport default class SwupDebugPlugin extends Plugin {\n\tname = 'SwupDebugPlugin';\n\n\trequires = { swup: '>=4' };\n\n\tdefaults = {\n\t\tglobalInstance: false\n\t};\n\n\tconstructor(options = {}) {\n\t\tsuper();\n\t\tthis.options = { ...this.defaults, ...options };\n\t}\n\n\tmount() {\n\t\tconst swup = this.swup;\n\n\t\t// set non-empty log method of swup\n\t\tthis.originalSwupLog = swup.log;\n\t\tswup.log = this.log;\n\n\t\t// set swup instance as a global variable swup\n\t\tif (this.options.globalInstance) {\n\t\t\twindow.swup = swup;\n\t\t}\n\n\t\t// check if title tag is present\n\t\tif (!document.getElementsByTagName('title').length) {\n\t\t\tthis.warn(`This page doesn't have a title tag. It is required on every page.`)\n\t\t}\n\n\t\t// make hook calls appear in console\n\t\tthis.originalSwupHookCall = swup.hooks.call.bind(swup.hooks);\n\t\tthis.originalSwupHookCallSync = swup.hooks.callSync.bind(swup.hooks);\n\t\tswup.hooks.call = this.callHook.bind(this);\n\t\tswup.hooks.callSync = this.callHookSync.bind(this);\n\t}\n\n\tunmount() {\n\t\tsuper.unmount();\n\n\t\tthis.swup.log = this.originalSwupLog;\n\t\tthis.swup.hooks.call = this.originalSwupHookCall;\n\t\tthis.swup.hooks.callSync = this.originalSwupHookCallSync;\n\t\tif (this.options.globalInstance) {\n\t\t\twindow.swup = null;\n\t\t}\n\t}\n\n\tlogHook(hook, data) {\n\t\tconsole.groupCollapsed(\n\t\t\t'%cswup:' + '%c' + hook,\n\t\t\t'color: #343434',\n\t\t\t'color: #009ACD'\n\t\t);\n\t\tconsole.log(data);\n\t\tconsole.groupEnd();\n\t}\n\n\tcallHook(hook, data, ...args) {\n\t\tthis.logHook(hook, data);\n\t\treturn this.originalSwupHookCall(hook, data, ...args);\n\t}\n\n\tcallHookSync(hook, data, ...args) {\n\t\tthis.logHook(hook, data);\n\t\treturn this.originalSwupHookCallSync(hook, data, ...args);\n\t}\n\n\tlog(str, object) {\n\t\tif (object) {\n\t\t\tconsole.groupCollapsed(str);\n\t\t\tfor (let key in object) {\n\t\t\t\tconsole.log(object[key]);\n\t\t\t}\n\t\t\tconsole.groupEnd();\n\t\t} else {\n\t\t\tconsole.log(str + '%c', 'color: #009ACD');\n\t\t}\n\t}\n\n\twarn(str) {\n\t\tconsole.warn(`[swup debug plugin] ${str}`);\n\t}\n\n\terror(str) {\n\t\tconsole.error(`[swup debug plugin] ${str}`);\n\t}\n}\n"],"names":["Plugin","constructor","options","super","this","name","requires","swup","defaults","globalInstance","mount","originalSwupLog","log","window","document","getElementsByTagName","length","warn","originalSwupHookCall","hooks","call","bind","originalSwupHookCallSync","callSync","callHook","callHookSync","unmount","logHook","hook","data","console","groupCollapsed","groupEnd","slice","arguments","str","object","key","error"],"mappings":"qIAEe,cAA8BA,EAAO,QASnDC,YAAYC,QAAAA,IAAAA,IAAAA,EAAU,IACrBC,QAAQC,KATTC,KAAO,kBAEPC,KAAAA,SAAW,CAAEC,KAAM,OAAOH,KAE1BI,SAAW,CACVC,gBAAgB,GAKhBL,KAAKF,QAAU,IAAKE,KAAKI,YAAaN,EACvC,CAEAQ,QACC,MAAMH,EAAOH,KAAKG,KAGlBH,KAAKO,gBAAkBJ,EAAKK,IAC5BL,EAAKK,IAAMR,KAAKQ,IAGZR,KAAKF,QAAQO,iBAChBI,OAAON,KAAOA,GAIVO,SAASC,qBAAqB,SAASC,QAC3CZ,KAAKa,KAAM,qEAIZb,KAAKc,qBAAuBX,EAAKY,MAAMC,KAAKC,KAAKd,EAAKY,OACtDf,KAAKkB,yBAA2Bf,EAAKY,MAAMI,SAASF,KAAKd,EAAKY,OAC9DZ,EAAKY,MAAMC,KAAOhB,KAAKoB,SAASH,KAAKjB,MACrCG,EAAKY,MAAMI,SAAWnB,KAAKqB,aAAaJ,KAAKjB,KAC9C,CAEAsB,UACCvB,MAAMuB,UAENtB,KAAKG,KAAKK,IAAMR,KAAKO,gBACrBP,KAAKG,KAAKY,MAAMC,KAAOhB,KAAKc,qBAC5Bd,KAAKG,KAAKY,MAAMI,SAAWnB,KAAKkB,yBAC5BlB,KAAKF,QAAQO,iBAChBI,OAAON,KAAO,KAEhB,CAEAoB,QAAQC,EAAMC,GACbC,QAAQC,eACP,YAAmBH,EACnB,iBACA,kBAEDE,QAAQlB,IAAIiB,GACZC,QAAQE,UACT,CAEAR,SAASI,EAAMC,GAEd,OADAzB,KAAKuB,QAAQC,EAAMC,GACRzB,KAACc,qBAAqBU,EAAMC,KAAM,GAAAI,MAAAb,KAAAc,UAAO,GACrD,CAEAT,aAAaG,EAAMC,GAElB,OADAzB,KAAKuB,QAAQC,EAAMC,GACRzB,KAACkB,yBAAyBM,EAAMC,KAAM,GAAAI,MAAAb,KAAAc,UAAO,GACzD,CAEAtB,IAAIuB,EAAKC,GACR,GAAIA,EAAQ,CACXN,QAAQC,eAAeI,GACvB,IAAK,IAAIE,KAAOD,EACfN,QAAQlB,IAAIwB,EAAOC,IAEpBP,QAAQE,UACT,MACCF,QAAQlB,IAAIuB,EAAM,KAAM,iBAE1B,CAEAlB,KAAKkB,GACJL,QAAQb,KAAM,uBAAsBkB,IACrC,CAEAG,MAAMH,GACLL,QAAQQ,MAAO,uBAAsBH,IACtC"}